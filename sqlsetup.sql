-- This script is to initialise the database for our app sec project. 
-- If any changes were to be made please consult with the team.
-- If you do not know how to use this script, please go to chatgpt. Thank you.
-- user = developer
-- password = temppassword
-- Deleting existing schema if applicable
Drop database if exists `app_sec_db`;
Drop user if exists 'developer';
CREATE SCHEMA `app_sec_db`;
USE app_sec_db;
create user 'developer' identified by 'temppassword';
GRANT SELECT, INSERT, UPDATE, DELETE on app_sec_db.* to developer;
CREATE TABLE app_sec_db.USERS(
    USER_ID VARCHAR(50) primary key,
    USERNAME VARCHAR(20) NOT NULL UNIQUE,
    USERPFP VARCHAR(255),
    FNAME VARCHAR(15) NOT NULL,
    LNAME VARCHAR(15) NOT NULL,
    GENDER VARCHAR(25) NOT NULL,
    DOB DATE NOT NULL,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    TEL_NO VARCHAR(20) NOT NULL UNIQUE,
    ADDRESS VARCHAR(50),
    POSTAL_CODE VARCHAR(10),
    IS_ACTIVE BOOLEAN NOT NULL,
    IS_VERIFIED BOOLEAN NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ROLE ENUM('Admin', 'User') DEFAULT 'User' NOT NULL,
    SETTINGS JSON
  );


INSERT INTO USERS (
  USER_ID, USERNAME, USERPFP, FNAME, LNAME, GENDER, DOB, EMAIL,
  PASSWORD_HASH, TEL_NO, ADDRESS, POSTAL_CODE, IS_ACTIVE, IS_VERIFIED,
  CREATED_AT, ROLE, SETTINGS
)VALUES (
  'ce2c0b67-3132-4181-b78d-da8b7f4bb4c7',
  'Admin',
  NULL,
  'Admin',
  'Account',
  'Other',
  '1970-01-01',
  'admin@example.com',
  'scrypt:32768:8:1$tDCkbR9hs7RN43k3$d39a213ccb68d49c60038e83bb06c22fc06bddfad08c596a8c3802f51bfc49da009ddcecb2a150e6c6ef6bfea0efa7a7fa6f5dadc27496d1c9388ee594da994d',
  '12345678',
  '123 Admin Street',
  '123456',
  TRUE,
  TRUE,
  CURRENT_TIMESTAMP,
  'Admin',
  '{}'
);



CREATE TABLE app_sec_db.SUBCOMMUNITY(
  ID VARCHAR(50) primary key,
  NAME VARCHAR(30) NOT NULL UNIQUE,
  MEMBER_COUNT INT NOT NULL DEFAULT 0,
  DESCRIPTION VARCHAR(255),
  COMM_PFP VARCHAR(255) NOT NULL,
  BANNER_IMAGE VARCHAR(255) NOT NULL,
  TAG VARCHAR(255) NOT NULL
);
CREATE TABLE app_sec_db.POST(
  POST_ID VARCHAR(50) primary key,
  USER_ID VARCHAR(50) NOT NULL,
  COMM_ID VARCHAR(50) NOT NULL,
  TITLE VARCHAR(255) NOT NULL,
  IMAGE VARCHAR(255),
  DESCRIPT VARCHAR(225),
  LIKE_COUNT INT DEFAULT 0,
  COMMENT_COUNT INT DEFAULT 0,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (COMM_ID) REFERENCES SUBCOMMUNITY(ID)
);
CREATE TABLE app_sec_db.FRIEND_REQ(
  ID INT AUTO_INCREMENT primary key,
  SENDER_ID VARCHAR(50) NOT NULL,
  RECV_ID VARCHAR(50) NOT NULL,
  STATUS ENUM('pending', 'accepted', 'rejected') DEFAULT 'pending',
  CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (RECV_ID) REFERENCES USERS(USER_ID)
);
CREATE TABLE app_sec_db.MESSAGES(
  ID VARCHAR(50) primary key,
  SENDER_ID VARCHAR(50) NOT NULL,
  RECV_ID VARCHAR(50) NOT NULL,
  CONTENT TEXT NOT NULL,
  CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
  IS_READ BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (RECV_ID) REFERENCES USERS(USER_ID)
);
CREATE TABLE app_sec_db.FRIENDS(
  USER_ID varchar(50) NOT NULL,
  FRIEND_ID varchar(50) NOT NULL,
  CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (USER_ID, FRIEND_ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
  FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID)
);


CREATE TABLE app_sec_db.USERSESSION(
  SESS_ID VARCHAR(255) PRIMARY KEY,
  USER_ID VARCHAR(50),
  CREATED_AT TIMESTAMP NOT NULL,
  LAST_ACTIVE TIMESTAMP NOT NULL
);

CREATE TABLE sessions (
    id INT NOT NULL AUTO_INCREMENT,
    session_id VARCHAR(255) UNIQUE,
    data BLOB,
    expiry DATETIME,
    PRIMARY KEY (id)
);


